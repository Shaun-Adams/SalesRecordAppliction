@page "/"
@inject ProductService ProductService
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<PageTitle>Products</PageTitle>

<h1>Products</h1>

@if (products == null)
{
    <p>Loading...</p>
}
else
{
    <div class="row row-cols-1 row-cols-md-4 g-4">
    @foreach (var product in products)
    {
        <div class="col">
            <div class="card h-100">
                <img src="@product.Image" class="card-img-top" alt="@product.Description" style="height: 200px; object-fit: cover;">
                <div class="card-body d-flex flex-column">
                    <div class="d-flex justify-content-between mb-3">
                        <h5 class="card-title"><strong>@product.Description</strong></h5>
                        <p class="card-text"> @product.SalePrice.ToString("C")</p>
                    </div>
                    <button @onclick="() => ViewSales(product.Id)" class="btn btn-gradient">View Sales</button>
                </div>
            </div>
        </div>
    }
    </div>
}

@code {
    private List<Product>? products;

    protected override async Task OnInitializedAsync()
    {
        products = (await ProductService.GetProductsAsync()).ToList();
    }

    private void ViewSales(int productId)
    {
        NavigationManager.NavigateTo($"/product-sales/{productId}");
    }

}
